{"id":"../src/IntersectionHandler.js","dependencies":[{"name":"/Users/fs/Sites/Joinimation/.babelrc","includedInParent":true,"mtime":1574767997644},{"name":"/Users/fs/Sites/Joinimation/package.json","includedInParent":true,"mtime":1574768267932}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Handles intersection events and updates DOM\n */\nvar IntersectionHandler =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {AnimationElements} elementStore       Store that holds all elemets that are being\n   *                                               intersection-observed and updated on\n   *                                               intersection change\n   * @param {VisibilityObserver} intersectEmitter  Emitter that handles intersection changes on\n   *                                               elements from elementStore and fires\n   *                                               'intersect' event when intersection changes\n   */\n  function IntersectionHandler(elementStore, intersectEmitter) {\n    _classCallCheck(this, IntersectionHandler);\n\n    this.elementStore = elementStore;\n    this.intersectEmitter = intersectEmitter;\n    this.setupIntersectionHandler();\n  }\n  /**\n   * Handles 'intersect' events fired by this.intersectEmitter and updates DOM accordingly\n   */\n\n\n  _createClass(IntersectionHandler, [{\n    key: \"setupIntersectionHandler\",\n    value: function setupIntersectionHandler() {\n      var _this = this;\n\n      this.intersectEmitter.on('intersect', function (element) {\n        var receivers = _this.elementStore.getReceiversForElement(element);\n\n        receivers.forEach(function (receiver) {\n          return _this.updateDom(receiver);\n        });\n      });\n    }\n    /**\n     * Updates DOM whenever an intersection change is observed. Adds class \n     * @param  {DOMElement} options.element    Element to add class to\n     * @param  {number} options.delay          Delay after which class should be added to element\n     * @param  {string} options.visibleClass   Name of the class that should be added to element\n     */\n\n  }, {\n    key: \"updateDom\",\n    value: function updateDom(_ref) {\n      var element = _ref.element,\n          delay = _ref.delay,\n          visibleClass = _ref.visibleClass;\n      setTimeout(function () {\n        requestAnimationFrame(function () {\n          return element.classList.add(visibleClass);\n        });\n      }, delay);\n    }\n  }]);\n\n  return IntersectionHandler;\n}();\n\nexports.default = IntersectionHandler;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":14,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":1,"column":0}},{"name":"IntersectionHandler","generated":{"line":17,"column":4},"source":"../src/IntersectionHandler.js","original":{"line":4,"column":21}},{"generated":{"line":20,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":6,"column":4}},{"generated":{"line":28,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":14,"column":4}},{"name":"elementStore","generated":{"line":28,"column":31},"source":"../src/IntersectionHandler.js","original":{"line":14,"column":16}},{"generated":{"line":28,"column":43},"source":"../src/IntersectionHandler.js","original":{"line":14,"column":4}},{"name":"intersectEmitter","generated":{"line":28,"column":45},"source":"../src/IntersectionHandler.js","original":{"line":14,"column":30}},{"generated":{"line":28,"column":61},"source":"../src/IntersectionHandler.js","original":{"line":14,"column":4}},{"generated":{"line":28,"column":63},"source":"../src/IntersectionHandler.js","original":{"line":14,"column":48}},{"generated":{"line":29,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":14,"column":48}},{"generated":{"line":31,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":15,"column":8}},{"name":"elementStore","generated":{"line":31,"column":9},"source":"../src/IntersectionHandler.js","original":{"line":15,"column":13}},{"generated":{"line":31,"column":21},"source":"../src/IntersectionHandler.js","original":{"line":15,"column":8}},{"name":"elementStore","generated":{"line":31,"column":24},"source":"../src/IntersectionHandler.js","original":{"line":15,"column":28}},{"generated":{"line":31,"column":36},"source":"../src/IntersectionHandler.js","original":{"line":15,"column":8}},{"generated":{"line":32,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":16,"column":8}},{"name":"intersectEmitter","generated":{"line":32,"column":9},"source":"../src/IntersectionHandler.js","original":{"line":16,"column":13}},{"generated":{"line":32,"column":25},"source":"../src/IntersectionHandler.js","original":{"line":16,"column":8}},{"name":"intersectEmitter","generated":{"line":32,"column":28},"source":"../src/IntersectionHandler.js","original":{"line":16,"column":32}},{"generated":{"line":32,"column":44},"source":"../src/IntersectionHandler.js","original":{"line":16,"column":8}},{"generated":{"line":33,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":17,"column":8}},{"name":"setupIntersectionHandler","generated":{"line":33,"column":9},"source":"../src/IntersectionHandler.js","original":{"line":17,"column":13}},{"generated":{"line":33,"column":33},"source":"../src/IntersectionHandler.js","original":{"line":17,"column":8}},{"generated":{"line":34,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":18,"column":5}},{"generated":{"line":35,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":20,"column":4}},{"generated":{"line":42,"column":47},"source":"../src/IntersectionHandler.js","original":{"line":23,"column":31}},{"generated":{"line":43,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":23,"column":31}},{"generated":{"line":45,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":24,"column":8}},{"name":"intersectEmitter","generated":{"line":45,"column":11},"source":"../src/IntersectionHandler.js","original":{"line":24,"column":13}},{"generated":{"line":45,"column":27},"source":"../src/IntersectionHandler.js","original":{"line":24,"column":8}},{"name":"on","generated":{"line":45,"column":28},"source":"../src/IntersectionHandler.js","original":{"line":24,"column":30}},{"generated":{"line":45,"column":30},"source":"../src/IntersectionHandler.js","original":{"line":24,"column":8}},{"generated":{"line":45,"column":31},"source":"../src/IntersectionHandler.js","original":{"line":24,"column":33}},{"generated":{"line":45,"column":42},"source":"../src/IntersectionHandler.js","original":{"line":24,"column":8}},{"generated":{"line":45,"column":44},"source":"../src/IntersectionHandler.js","original":{"line":24,"column":46}},{"name":"element","generated":{"line":45,"column":54},"source":"../src/IntersectionHandler.js","original":{"line":24,"column":47}},{"generated":{"line":45,"column":61},"source":"../src/IntersectionHandler.js","original":{"line":24,"column":46}},{"generated":{"line":45,"column":63},"source":"../src/IntersectionHandler.js","original":{"line":24,"column":59}},{"generated":{"line":46,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":25,"column":12}},{"name":"receivers","generated":{"line":46,"column":12},"source":"../src/IntersectionHandler.js","original":{"line":25,"column":18}},{"generated":{"line":46,"column":21},"source":"../src/IntersectionHandler.js","original":{"line":25,"column":27}},{"generated":{"line":46,"column":24},"source":"../src/IntersectionHandler.js","original":{"line":25,"column":30}},{"generated":{"line":46,"column":29},"source":"../src/IntersectionHandler.js","original":{"line":25,"column":34}},{"name":"elementStore","generated":{"line":46,"column":30},"source":"../src/IntersectionHandler.js","original":{"line":25,"column":35}},{"generated":{"line":46,"column":42},"source":"../src/IntersectionHandler.js","original":{"line":25,"column":30}},{"name":"getReceiversForElement","generated":{"line":46,"column":43},"source":"../src/IntersectionHandler.js","original":{"line":25,"column":48}},{"generated":{"line":46,"column":65},"source":"../src/IntersectionHandler.js","original":{"line":25,"column":30}},{"name":"element","generated":{"line":46,"column":66},"source":"../src/IntersectionHandler.js","original":{"line":25,"column":71}},{"generated":{"line":46,"column":73},"source":"../src/IntersectionHandler.js","original":{"line":25,"column":30}},{"generated":{"line":46,"column":74},"source":"../src/IntersectionHandler.js","original":{"line":25,"column":12}},{"name":"receivers","generated":{"line":48,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":12}},{"name":"receivers","generated":{"line":48,"column":8},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":12}},{"generated":{"line":48,"column":17},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":21}},{"name":"forEach","generated":{"line":48,"column":18},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":22}},{"generated":{"line":48,"column":25},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":12}},{"generated":{"line":48,"column":26},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":30}},{"name":"receiver","generated":{"line":48,"column":36},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":30}},{"generated":{"line":48,"column":44},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":38}},{"generated":{"line":49,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":38}},{"generated":{"line":49,"column":17},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":42}},{"generated":{"line":49,"column":22},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":46}},{"name":"updateDom","generated":{"line":49,"column":23},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":47}},{"generated":{"line":49,"column":32},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":42}},{"name":"receiver","generated":{"line":49,"column":33},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":57}},{"generated":{"line":49,"column":41},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":42}},{"generated":{"line":49,"column":42},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":38}},{"generated":{"line":50,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":38}},{"generated":{"line":50,"column":9},"source":"../src/IntersectionHandler.js","original":{"line":26,"column":12}},{"generated":{"line":51,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":27,"column":9}},{"generated":{"line":51,"column":7},"source":"../src/IntersectionHandler.js","original":{"line":24,"column":8}},{"generated":{"line":52,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":28,"column":5}},{"generated":{"line":53,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":30,"column":4}},{"generated":{"line":62,"column":36},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":48}},{"generated":{"line":63,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":48}},{"name":"element","generated":{"line":63,"column":10},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":16}},{"generated":{"line":63,"column":17},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":48}},{"name":"element","generated":{"line":63,"column":25},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":16}},{"generated":{"line":63,"column":32},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":48}},{"generated":{"line":64,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":48}},{"name":"delay","generated":{"line":64,"column":10},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":25}},{"generated":{"line":64,"column":15},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":48}},{"name":"delay","generated":{"line":64,"column":23},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":25}},{"generated":{"line":64,"column":28},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":48}},{"generated":{"line":65,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":48}},{"name":"visibleClass","generated":{"line":65,"column":10},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":32}},{"generated":{"line":65,"column":22},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":48}},{"name":"visibleClass","generated":{"line":65,"column":30},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":32}},{"generated":{"line":65,"column":42},"source":"../src/IntersectionHandler.js","original":{"line":36,"column":48}},{"name":"setTimeout","generated":{"line":66,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":37,"column":8}},{"name":"setTimeout","generated":{"line":66,"column":6},"source":"../src/IntersectionHandler.js","original":{"line":37,"column":8}},{"generated":{"line":66,"column":16},"source":"../src/IntersectionHandler.js","original":{"line":37,"column":18}},{"generated":{"line":66,"column":17},"source":"../src/IntersectionHandler.js","original":{"line":37,"column":19}},{"generated":{"line":66,"column":29},"source":"../src/IntersectionHandler.js","original":{"line":37,"column":25}},{"name":"requestAnimationFrame","generated":{"line":67,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":12}},{"name":"requestAnimationFrame","generated":{"line":67,"column":8},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":12}},{"generated":{"line":67,"column":29},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":33}},{"generated":{"line":67,"column":30},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":34}},{"generated":{"line":68,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":34}},{"name":"element","generated":{"line":68,"column":17},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":40}},{"generated":{"line":68,"column":24},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":47}},{"name":"classList","generated":{"line":68,"column":25},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":48}},{"generated":{"line":68,"column":34},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":40}},{"name":"add","generated":{"line":68,"column":35},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":58}},{"generated":{"line":68,"column":38},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":40}},{"name":"visibleClass","generated":{"line":68,"column":39},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":62}},{"generated":{"line":68,"column":51},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":40}},{"generated":{"line":68,"column":52},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":34}},{"generated":{"line":69,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":34}},{"generated":{"line":69,"column":9},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":33}},{"generated":{"line":69,"column":10},"source":"../src/IntersectionHandler.js","original":{"line":38,"column":12}},{"generated":{"line":70,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":39,"column":9}},{"generated":{"line":70,"column":7},"source":"../src/IntersectionHandler.js","original":{"line":37,"column":18}},{"name":"delay","generated":{"line":70,"column":9},"source":"../src/IntersectionHandler.js","original":{"line":39,"column":11}},{"generated":{"line":70,"column":14},"source":"../src/IntersectionHandler.js","original":{"line":37,"column":18}},{"generated":{"line":70,"column":15},"source":"../src/IntersectionHandler.js","original":{"line":37,"column":8}},{"generated":{"line":71,"column":0},"source":"../src/IntersectionHandler.js","original":{"line":40,"column":5}}],"sources":{"../src/IntersectionHandler.js":"/**\n * Handles intersection events and updates DOM\n */\nexport default class IntersectionHandler {\n\n    /**\n     * @param {AnimationElements} elementStore       Store that holds all elemets that are being\n     *                                               intersection-observed and updated on\n     *                                               intersection change\n     * @param {VisibilityObserver} intersectEmitter  Emitter that handles intersection changes on\n     *                                               elements from elementStore and fires\n     *                                               'intersect' event when intersection changes\n     */\n    constructor(elementStore, intersectEmitter) {\n        this.elementStore = elementStore;\n        this.intersectEmitter = intersectEmitter;\n        this.setupIntersectionHandler();\n    }\n\n    /**\n     * Handles 'intersect' events fired by this.intersectEmitter and updates DOM accordingly\n     */\n    setupIntersectionHandler() {\n        this.intersectEmitter.on('intersect', (element) => {\n            const receivers = this.elementStore.getReceiversForElement(element);\n            receivers.forEach(receiver => this.updateDom(receiver));\n        });\n    }\n\n    /**\n     * Updates DOM whenever an intersection change is observed. Adds class \n     * @param  {DOMElement} options.element    Element to add class to\n     * @param  {number} options.delay          Delay after which class should be added to element\n     * @param  {string} options.visibleClass   Name of the class that should be added to element\n     */\n    updateDom({ element, delay, visibleClass }) {\n        setTimeout(() => {\n            requestAnimationFrame(() => element.classList.add(visibleClass));\n        }, delay);\n    }\n\n}\n"},"lineCount":null}},"error":null,"hash":"16f598dd6ddcfc1b0f0f5350ba3edde6","cacheData":{"env":{}}}